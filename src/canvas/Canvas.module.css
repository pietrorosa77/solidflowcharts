.CanvasWrapper {
  width: 100%;
  height: 100%;
  background-color: var(--canvas-bg-color);
}

.SelectedArea {
  background-color: var(--accent-color);
  position: absolute;
  border: solid 1px rgba(123, 123, 123, 0.61);
  z-index: 200;
  opacity: 0.3;
}

.Canvas {
  background-image: linear-gradient(
      var(--grid-lines-color) 2px,
      transparent 2px
    ),
    linear-gradient(90deg, var(--grid-lines-color) 2px, transparent 2px),
    linear-gradient(var(--grid-lines-color) 1px, transparent 1px),
    linear-gradient(90deg, var(--grid-lines-color) 1px, transparent 1px);
  background-size: 50px 50px, 50px 50px, 10px 10px, 10px 10px;
  outline: 1px dashed var(--grid-lines-outline-color);
  position: relative;
  border: 1px solid var(--grid-lines-color);
  background-color: var(--grid-bg-color);
  /* box-shadow: 0 3px 10px rgb(0 0 0 / 20%); */
  width: 3000px;
  height: 3000px;
}

.CanvasCommands {
  position: fixed;
  bottom: 0;
  right: 0;
  display: flex;
  flex-direction: row;
  width: 400px;
  height: 50px;
  opacity: 0.8;
  background-color: var(--bars-color);
  border-top-left-radius: 8px;
  align-items: center;
  padding: 10px;
}

.CanvasCommandsDisabled {
  fill: var(
    --bg-inactive
  ) !important; /* flag important needed because of solidicons */
  cursor: default !important;
}

.CanvasCommand {
  fill: var(--node-font-color);
}

.CanvasCommandsEnabled,
.CanvasCommand:hover {
  fill: var(
    --accent-color
  ) !important /* flag important needed because of solidicons */;
  border-color: var(
    --accent-color
  ) !important /* flag important needed because of solidicons */;
  box-shadow: unset !important;
  cursor: pointer;
}

.CanvasModal {
  font-family: var(--diagram-font-family);
  fill: var(--node-font-color);
}
